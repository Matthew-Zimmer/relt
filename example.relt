# declare library lib package com.example.lib version 0.0.0 = {
#  concat: string => string => string,
# }

let connection = {
  kind: "db",
  host: "localhost",
  port: 5432,
  user: "root",
  password: "PASSWORD",
}

type Person = {
  id: pk int,
  firstName: string,
  lastName: string,
}

type Sale = {
  # date: date,
  personId: fk Person.id,
  customerName: string,
  amountDollars: float,
}

# type PersonSale = Person left join (Sale group by personId agg {
#   sales = collect(this),
#   dollars = sum(amountDollars),
# }) with {
#   sales = sales ?? [],
#   dollars = dollars ?? 0.0,
# }

type PersonSale = Person with {
  sales: Sale[],
}

func source(t: Person) { connection + { table: "person" } } 
func source(t: Sale) { connection + { table: "sale" } }

# func destination(t: PersonSale) { connection } 
# + { table: "person_sale" }

